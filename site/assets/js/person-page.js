// –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–µ—Ä—Å–æ–Ω—ã
class PersonPage {
    constructor() {
        this.personId = null;
        this.personData = null;
        this.tabs = null;
        this.isInitialized = false;
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    async init() {
        try {
            // –ü–æ–ª—É—á–∞–µ–º ID –ø–µ—Ä—Å–æ–Ω—ã –∏–∑ URL
            this.personId = getPersonIdFromUrl();

            if (!this.personId) {
                this.showError('ID –ø–µ—Ä—Å–æ–Ω—ã –Ω–µ —É–∫–∞–∑–∞–Ω');
                return;
            }

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
            this.tabs = new PersonTabs();

            // –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
            if (typeof PersonMessages !== 'undefined') {
                window.personMessages = new PersonMessages();
            }
            if (typeof PersonPhotos !== 'undefined') {
                window.personPhotos = new PersonPhotos();
            }

            // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            await this.loadPersonData();

            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Ç–∞–±
            this.tabs.restoreActiveTab();

            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            this.setupEventListeners();

            this.isInitialized = true;

        } catch (error) {
            this.showError('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω—ã
     */
    async loadPersonData() {
        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∑–∞–≥—Ä—É–∑–∫–∏
            this.showLoadingState();

            // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            this.personData = await personAPI.getPersonInfo(this.personId);

            // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            this.updatePageHeader();

            // –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–∞–±–æ–≤ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ restoreActiveTab()

        } catch (error) {
            this.showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω—ã');
        }
    }

    /**
     * –ü–æ–∫–∞–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
     */
    showLoadingState() {
        const nameElement = document.getElementById('personName');
        const datesElement = document.getElementById('personDates');

        if (nameElement) {
            nameElement.textContent = '–ó–∞–≥—Ä—É–∑–∫–∞...';
        }

        if (datesElement) {
            datesElement.textContent = '';
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    updatePageHeader() {
        if (!this.personData) {
            return;
        }

        const nameElement = document.getElementById('personName');
        const datesElement = document.getElementById('personDates');
        const detailsElement = document.getElementById('personDetails');

        if (nameElement) {
            const displayName = this.personData.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø–µ—Ä—Å–æ–Ω–∞';
            nameElement.textContent = displayName;
        }

        if (datesElement) {
            const displayDates = this.personData.dates || '';
            datesElement.textContent = displayDates;
        }

        // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Å–µ–∫—Ü–∏—é details
        if (detailsElement) {
            this.loadPersonDetails(detailsElement);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        document.title = `${this.personData.name || '–ü–µ—Ä—Å–æ–Ω–∞'} - –°–µ–º–µ–π–Ω–æ–µ –¥–µ—Ä–µ–≤–æ`;
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä—Å–æ–Ω–µ
     */
    loadPersonDetails(detailsElement) {
        const info = this.personData;
        let detailsHTML = '';

        // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        if (info.full_info && info.full_info !== info.name) {
            detailsHTML += `<div class="person-info-item">${Utils.escapeHtml(info.full_info)}</div>`;
        }

        // ID –ø–µ—Ä—Å–æ–Ω—ã (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID –∏–∑ URL, –∞ –Ω–µ –∏–∑ API –æ—Ç–≤–µ—Ç–∞)
        if (this.personId) {
            detailsHTML += `<div class="person-info-item"><strong>ID:</strong> ${Utils.escapeHtml(this.personId)}</div>`;
        }

        if (detailsHTML) {
            detailsElement.innerHTML = detailsHTML;
        } else {
            detailsElement.innerHTML = '<div class="person-info-item">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</div>';
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        window.addEventListener('error', (event) => {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–º–µ–Ω—ã —Ç–∞–±–æ–≤
        document.addEventListener('tabChange', (event) => {
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è URL (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –Ω–∞–∑–∞–¥/–≤–ø–µ—Ä–µ–¥)
        window.addEventListener('popstate', (event) => {
            const newPersonId = Utils.getUrlParameter('id');
            if (newPersonId !== this.personId) {
                this.personId = newPersonId;
                this.loadPersonData();
            }
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.addEventListener('visibilitychange', () => {
            if (document.visibilityState === 'visible' && this.isInitialized) {
                this.onPageVisible();
            }
        });

        // –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
        document.addEventListener('keydown', (e) => {
            this.handleKeyboardShortcuts(e);
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ drag and drop —Ñ–∞–π–ª–æ–≤ –Ω–∞ –≤—Å—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        this.setupPageDragAndDrop();
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ drag and drop –¥–ª—è –≤—Å–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    setupPageDragAndDrop() {
        let dragCounter = 0;

        document.addEventListener('dragenter', (e) => {
            e.preventDefault();
            dragCounter++;

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º overlay —Ç–æ–ª—å–∫–æ –¥–ª—è —Ñ–∞–π–ª–æ–≤ –∏ –Ω–µ –≤ —Ä–µ–∂–∏–º–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
            if (e.dataTransfer.types.includes('Files') &&
                !(window.personPhotos && window.personPhotos.sortMode)) {
                this.showDropOverlay();
            }
        });

        document.addEventListener('dragleave', (e) => {
            e.preventDefault();
            dragCounter--;

            if (dragCounter === 0) {
                this.hideDropOverlay();
            }
        });

        document.addEventListener('dragover', (e) => {
            e.preventDefault();
        });

        document.addEventListener('drop', (e) => {
            e.preventDefault();
            dragCounter = 0;
            this.hideDropOverlay();

            // –ù–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã –µ—Å–ª–∏ –≤ —Ä–µ–∂–∏–º–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
            if (window.personPhotos && window.personPhotos.sortMode) {
                return;
            }

            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ç–∞–± —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
            if (e.dataTransfer.files.length > 0) {
                this.tabs.switchTab('photos');
                setTimeout(() => {
                    if (window.personPhotos) {
                        window.personPhotos.handleFiles(e.dataTransfer.files);
                    }
                }, 300);
            }
        });
    }

    /**
     * –ü–æ–∫–∞–∑ overlay –¥–ª—è drag and drop
     */
    showDropOverlay() {
        // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º overlay –µ—Å–ª–∏ –≤ —Ä–µ–∂–∏–º–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
        if (window.personPhotos && window.personPhotos.sortMode) {
            return;
        }

        let overlay = document.querySelector('.page-drop-overlay');

        if (!overlay) {
            overlay = Utils.createElement('div', {
                className: 'page-drop-overlay',
                style: {
                    position: 'fixed',
                    top: '0',
                    left: '0',
                    right: '0',
                    bottom: '0',
                    background: 'rgba(102, 126, 234, 0.8)',
                    color: 'white',
                    display: 'flex',
                    flexDirection: 'column',
                    alignItems: 'center',
                    justifyContent: 'center',
                    zIndex: '10000',
                    backdropFilter: 'blur(5px)'
                }
            });

            overlay.innerHTML = `
                <div style="font-size: 64px; margin-bottom: 20px;">üì∑</div>
                <div style="font-size: 24px; font-weight: 500; margin-bottom: 10px;">–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å—é–¥–∞</div>
                <div style="font-size: 16px; opacity: 0.8;">–û–Ω–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ñ–æ—Ç–æ–∞–ª—å–±–æ–º –ø–µ—Ä—Å–æ–Ω—ã</div>
            `;

            document.body.appendChild(overlay);
        }

        overlay.style.display = 'flex';
    }

    /**
     * –°–∫—Ä—ã—Ç–∏–µ overlay –¥–ª—è drag and drop
     */
    hideDropOverlay() {
        const overlay = document.querySelector('.page-drop-overlay');
        if (overlay) {
            overlay.style.display = 'none';
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à
     * @param {KeyboardEvent} e - —Å–æ–±—ã—Ç–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
     */
    handleKeyboardShortcuts(e) {
        // Ctrl/Cmd + 1-4 –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–∞–±–æ–≤
        if ((e.ctrlKey || e.metaKey) && e.key >= '1' && e.key <= '4') {
            e.preventDefault();

            const tabMap = {
                '1': 'messages',
                '2': 'photos',
                '3': 'blog',
                '4': 'info'
            };

            const tabName = tabMap[e.key];
            if (tabName) {
                this.tabs.switchTab(tabName);
            }
        }

        // Ctrl/Cmd + N –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Ç–∞–±–µ
        if ((e.ctrlKey || e.metaKey) && e.key === 'n') {
            e.preventDefault();

            const activeTab = this.tabs.getActiveTab();
            switch (activeTab) {
                case 'messages':
                    if (window.personMessages) {
                        window.personMessages.showAddMessageModal();
                    }
                    break;
                case 'photos':
                    if (window.personPhotos) {
                        window.personPhotos.showAddPhotoModal();
                    }
                    break;
            }
        }

        // Escape –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        if (e.key === 'Escape') {
            const modal = document.getElementById('modal-overlay');
            if (modal && !modal.classList.contains('hidden')) {
                if (window.personMessages) {
                    window.personMessages.hideModal();
                }
                if (window.personPhotos) {
                    window.personPhotos.hideModal();
                }
            }
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–∏–¥–∏–º–æ–π
     */
    onPageVisible() {
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    }

    /**
     * –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏
     * @param {string} message - —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
     */
    showError(message) {
        const container = document.querySelector('.container');
        if (container) {
            container.innerHTML = `
                <div class="error-message" style="margin: 40px; text-align: center;">
                    <h2>‚ùå –û—à–∏–±–∫–∞</h2>
                    <p>${Utils.escapeHtml(message)}</p>
                    <div style="margin-top: 20px;">
                        <a href="index.html" class="btn">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –¥–µ—Ä–µ–≤—É</a>
                        <button onclick="location.reload()" class="btn btn-secondary" style="margin-left: 10px;">üîÑ –û–±–Ω–æ–≤–∏—Ç—å</button>
                    </div>
                </div>
            `;
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω—ã
     * @returns {Object|null} –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω—ã
     */
    getPersonData() {
        return this.personData;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–µ—Ä—Å–æ–Ω—ã
     * @returns {string|null} ID –ø–µ—Ä—Å–æ–Ω—ã
     */
    getPersonId() {
        return this.personId;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
     * @returns {boolean} –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞
     */
    isReady() {
        return this.isInitialized;
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω—ã
     */
    async refresh() {
        if (!this.personId) return;

        try {
            await this.loadPersonData();
        } catch (error) {
            // –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        }
    }

    /**
     * –ü–µ—Ä–µ—Ö–æ–¥ –∫ –¥—Ä—É–≥–æ–π –ø–µ—Ä—Å–æ–Ω–µ
     * @param {string} newPersonId - ID –Ω–æ–≤–æ–π –ø–µ—Ä—Å–æ–Ω—ã
     */
    navigateToSPerson(newPersonId) {
        if (newPersonId === this.personId) return;

        // –û–±–Ω–æ–≤–ª—è–µ–º URL –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const newUrl = `person.html?id=${newPersonId}`;
        window.history.pushState({ personId: newPersonId }, '', newUrl);

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ–π –ø–µ—Ä—Å–æ–Ω—ã
        this.personId = newPersonId;
        this.loadPersonData();
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–µ—Ä—Å–æ–Ω—ã
let personPage = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', async () => {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ –§–ò–û —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–æ—Å—Ç—ã–º —Å–∫—Ä–∏–ø—Ç–æ–º
        const nameElement = document.getElementById('personName');
        if (nameElement && nameElement.textContent !== '–ó–∞–≥—Ä—É–∑–∫–∞...') {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–∞–±—ã –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
            personPage = new PersonPage();
            personPage.personId = getPersonIdFromUrl();
            personPage.tabs = new PersonTabs();

            // –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
            if (typeof PersonMessages !== 'undefined') {
                window.personMessages = new PersonMessages();
            }
            if (typeof PersonPhotos !== 'undefined') {
                window.personPhotos = new PersonPhotos();
            }

            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Ç–∞–±
            personPage.tabs.restoreActiveTab();
            personPage.setupEventListeners();
            personPage.isInitialized = true;
            return;
        }

        // –ï—Å–ª–∏ –§–ò–û –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ, –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
        personPage = new PersonPage();
        await personPage.init();
    } catch (error) {
        console.error('Failed to start person page:', error);
    }
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.personPage = {
    instance: () => personPage,
    refresh: () => personPage?.refresh(),
    data: () => personPage?.getPersonData(),
    navigateTo: (id) => personPage?.navigateToSPerson(id)
};

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { PersonPage, personPage };
}
